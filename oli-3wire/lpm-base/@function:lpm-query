function lpm_query(id as long, cmd as string, param as long) as string * 2233
    '' NOTE: param = -1 omits parameter
    dim value as long

    select case param
    case -1
        sprintf(lpm_command, "%02d%s", id, uppercase(cmd))
    case 0 to 99999
        sprintf(lpm_command, "%02d%s%05d", id, uppercase(cmd), param)
    case else
        lpm_command=""
        lpm_results=""
        return QUESTION & QUESTION & "rejected: invalid parameter: " & param
    endselect

    serialOut(Com1, CR & lpm_command & CR,"",0,0)
    
    select case uppercase(cmd)
    case "TR"
        serialIn(lpm_results,Com1,300,ETX,2233)
    case "??"
        serialIn(lpm_results,Com1,30,LF,2233)
        '' output begins with "User commands", so look for "U" below
    case else
        serialin(lpm_results,Com1,300,CR,80)
        lpm_results = mid(lpm_results, 1, len(lpm_results))
    endselect

    select case left(lpm_results,1)
    case BANG
        '' examples: "!00BR00005", "!00CI00002"
        select case mid(lpm_results,4,2)
        case "CI"
            select case right(lpm_results,1)
            case 0  : return QUESTION & lpm_results & ": invalid parameter"      '' !00CI00000
            case 2  : return QUESTION & lpm_results & ": unknown command"        '' !00CI00002
            case 4  : return QUESTION & lpm_results & ": parameter out of range" '' !00CI00004
            case 8  : return QUESTION & lpm_results & ": config mode required"   '' !00CI00008
            endselect
        case uppercase(cmd)
            '' command confirmed, so return numeric parameter
            value = mid(lpm_results,6,5)
            return value
        case else
            return QUESTION & QUESTION & "unexpected:" & lpm_results
        endselect
    case STX
        '' framed telegram output with checksum
        lpm_checksum = lpm_calc_cksum(lpm_results)
        if lpm_checksum <> 0 then
            log("bad checksum for", lpm_command, ",", len(lpm_results), "bytes, checksum:", lpm_checksum)
            lpm_checksum = 1
        endif
        return lpm_results
    case "U"
        '' LPM help output from "??" command starts with "User commands:"
        return lpm_results
    case else
        '' simple data output from DD, DX, FM, PT, DA, ZT
        return lpm_results
    endselect
endfunction
