beginProg
    '' set logger port to match the LPM through the MD485 rs232-to-rs485 device
    serialOpen ({{LPM__PORT:Com1}},9600,0,300,4000)

    log("LPM_{{LPM_ID:0}} serial number (SN):", lpm_query({{LPM_ID:0}},"SN",-1))
    log("LPM_{{LPM_ID:0}} software version (SV):", "V" + lpm_query({{LPM_ID:0}},"SV",-1)/100)
    log("LPM_{{LPM_ID:0}} bootloader version (SB):", "V" + lpm_query({{LPM_ID:0}},"SB",-1)/100)

    log_lpm_calibration({{LPM_ID:0}})

    '' put instrument in config mode:
    if lpm_query({{LPM_ID:0}},"KY",1) <> "1" then log("LPM_{{LPM_ID:0}} CONFIG MODE FAILED")

    '' log LPM baud rate and interface mode (should be 9600, half duplex)
    log("LPM_{{LPM_ID:0}} baud rate (BR):", lpm_query({{LPM_ID:0}},"BR",-1), "(5=9600,6=19200,9=115200)")
    log("LPM_{{LPM_ID:0}} comm mode (BD):", lpm_query({{LPM_ID:0}},"BD",-1), "(0=full-,1=half-duplex)")

    '' turn off automatic data telegram output!
    log("LPM_{{LPM_ID:0}} auto telegram output (TM):", lpm_query({{LPM_ID:0}},"TM",0))

    '' set the LPM clock from the logger at startup:
    realtime(logger_time) '' 1:year, 2:month, 3:day, 4:hour, 5:minute, 6:second
    lpm_query({{LPM_ID:0}},"ZS", logger_time(6))
    lpm_query({{LPM_ID:0}},"ZM", logger_time(5))
    lpm_query({{LPM_ID:0}},"ZH", logger_time(4))
    lpm_query({{LPM_ID:0}},"ZD", logger_time(3))
    lpm_query({{LPM_ID:0}},"ZN", logger_time(2))
    lpm_query({{LPM_ID:0}},"ZY", logger_time(1) mod 100)
    log("LPM_{{LPM_ID:0}} clock set from logger (ZT):", lpm_query({{LPM_ID:0}},"ZT",-1))
    log("LPM_{{LPM_ID:0}} runtime (ZB):", lpm_query({{LPM_ID:0}},"ZB",-1), "hrs")

    '' put instrument in normal command mode:
    if lpm_query({{LPM_ID:0}},"KY",0) <> "0" then
        log("LPM_{{LPM_ID:0}} WARNING: CONFIG MODE FAILED TO TURN OFF")
    endif
endProg
