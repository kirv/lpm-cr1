#!/usr/local/bin/bash

# datatables: compose datatables for final program 

error() { printf "%s\n"; exit 1; } 
shopt -s nocasematch nullglob

ob=.
test -n "$1" && ob="$1"

## resolve search directories
resolve_search_paths() {
    # if target (^ or .^) resolves as a directory, it's a prototype:
    test -d "$1" || {
        # otherwise, if it exists as a link it's a thinobject type:
        test -L "$1" && return 0
        return 1
        }
    search_paths+=("$1")
    # recurse to follow $1/^ or $1/.^ links:
    resolve_search_paths $1/^ || resolve_search_paths $1/.^ || return 1
    }
declare -a search_paths
resolve_search_paths $ob

resolve_attr() {
    for attr in "${search_paths[@]}"; do
        attr+=/$1
        test -e $attr && return 
    done
    return 1
    }

resolve_attr @order || error "no @order file found"
order=$attr

declare -a tables
tables=()

declare -A t
t=()

declare -i n init

for component in $(<$order); do
    resolve_attr "$component" || continue

    for dt in $attr/@datatable:*; do
        table=${dt##*:}
      # printf "'    %20s\t%s\n" "$table" "$dt"

        n=${t[$table]}

        if (( n == 0 )); then
            init=1
            tables+=($table)
            t[$table]=$n
            t[$table.USEDBY]+="$component "
        else
            init=0
            t[$table.USEDBY]+="$component "
        fi

        while read entry; do
          # printf "\t%s\n" "$entry"

            # cull all endTable statements:
            [[ "$entry" == endtable ]] && continue

            # cull all data* statements after the first:
            (( ! init )) && [[ "${entry:0:4}" == data ]] && continue

            # accumulate entries for the final table:
            n+=1
            t[$table.$n]="$entry"
            t[$table]=$n

        done < $dt

    done
done

for table in "${tables[@]}"; do
    printf "\n"
    [[ -n "$BUILD_SHOW_ID" ]] && 
        printf "' %s: %s\n" "$table" "${t[$table.USEDBY]}"
    printf "%s\n" "${t[$table.1]}"
    for ((n=2; n<=${t[$table]}; n+=1)); do
        printf "    %s\n" "${t[$table.$n]}"
    done
    printf "%s\n" "endTable"
done
    
