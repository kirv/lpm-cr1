#!/usr/bin/env bash

# parameters: list parameter symvars for each component in @order

warn() { printf "%s\n" "$@" >&2; } 
error() { warn "$@"; exit 1; } 

main() {
    local build_object=./
    local component
    local -a keyvals
    local kv
    local indent=16
    local width=80
    local -i i
    local padding
    
    while [[ ${1:0:1} == "-" ]]; do
        case $1 in
        --indent)   indent=$2 && shift ;;
        --width)    width=$2 && shift ;;
        --oneline | --one-line)   ONELINE=1 ;;
        --blank | --blank-line)     BLANKLINE=1 ;;
        --help)     awk '/^NAME/,/EOF/{print}' $0; exit ;; 
        -h)         awk '/^SYNOPSIS/{getline;print}' $0; exit ;; 
        *)          error "unknown option: $1" ;;
        esac
        shift
    done
    i=$indent
    padding="$( while ((i--)); do printf " "; done )"
    
    [[ -n "$1" ]] && build_object="$1"
    [[ -e $build_object/@order ]] || error "no @order file"

    while IFS= read -r component; do
        [[ ${component// /} == "" ]] && continue
        keyvals=( $(symvar $build_object/$component:) )
        if [[ ${#keyvals[@]} == 0 ]]; then
            printf "%s\n" $component
            (( BLANKLINE )) && printf "\n"
            continue
        fi
        printf "%s:" $component
        (( ${#keyvals[@]} == 0 )) && continue
        i=$((indent-${#component}-1))
        if ((i<1)); then
            printf "\n"
            printf "%s" "$padding"
        else
            while ((i--)); do printf " "; done
        fi
        i=$indent
        printf "%s" ${keyvals[0]}
        i+=${#keyvals[0]}
        if ((ONELINE==0)); then
            printf "\n"
            for kv in  ${keyvals[@]:1}; do
                printf "%s%s\n" "$padding" $kv
            done
        else
            for kv in  ${keyvals[@]:1}; do
                i+=1
                i+=${#kv}
                if (( i > width )); then
                    printf "\n%s%s" "$padding" $kv
                    i=$indent
                else
                    printf " %s" $kv
                fi
            done
            printf "\n"
        fi
        (( BLANKLINE )) && printf "\n"
    done < $build_object/@order

}

main "$@"

exit 0

NAME
    parameters

SYNOPSIS 
    parameters [--indent N] [--width N] [--one-line] [--blank]

DESCRIPTION
    Lists parameters declared for each component of the build object, where a component is a
    directory or symlink to a prototype object

OPTIONS
    --indent N
        indent param values N spaces from start-of-line

    --width N
        max width of param values list

    --oneline
    --one-line
        print component parameters on one line

    --blank
    --blank-line
        print blank line after each component

    --help
        verbose help

    -h
        show synopsis

AUTHOR
    ken.irving@alaska.edu
